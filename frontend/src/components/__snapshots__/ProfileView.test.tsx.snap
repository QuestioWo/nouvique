// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProfileView Should render correctly with mount 1`] = `
"<MemoryRouter>
  <Router history={{...}}>
    <ProfileView history={{...}} location={{...}} match={{...}} updateAlertBar={[Function: updateAlertBar]} emptyBasket={[Function: emptyBasket]} addToBasket={[Function: addToBasket]} removeFromBasket={[Function: removeFromBasket]} getBasketItems={[Function: getBasketItems]} getTotalBasketPrice={[Function: getTotalBasketPrice]} checkBasketAvailabilities={[Function: checkBasketAvailabilities]} stripePromise={{...}} alert={{...}}>
      <Offcanvas show={false} onHide={[Function (anonymous)]} placement=\\"end\\" scroll={true} backdrop={false} keyboard={true} autoFocus={true} enforceFocus={true} restoreFocus={true}>
        <Modal show={false} backdrop={false} container={[undefined]} keyboard={true} autoFocus={true} enforceFocus={true} restoreFocus={true} restoreFocusOptions={[undefined]} onEscapeKeyDown={[undefined]} onShow={[undefined]} onHide={[Function (anonymous)]} onEnter={[Function: handleEnter]} onEntering={[undefined]} onEntered={[undefined]} onExit={[undefined]} onExiting={[undefined]} onExited={[Function: handleExited]} manager={{...}} containerClassName=\\"offcanvas-open\\" transition={[Function: DialogTransition]} backdropTransition={[Function: BackdropTransition]} renderBackdrop={[Function (anonymous)]} renderDialog={[Function: renderDialog]} />
      </Offcanvas>
      <BasePage history={{...}} location={{...}} match={{...}} updateAlertBar={[Function: updateAlertBar]} emptyBasket={[Function: emptyBasket]} addToBasket={[Function: addToBasket]} removeFromBasket={[Function: removeFromBasket]} getBasketItems={[Function: getBasketItems]} getTotalBasketPrice={[Function: getTotalBasketPrice]} checkBasketAvailabilities={[Function: checkBasketAvailabilities]} stripePromise={{...}} alert={{...}}>
        <NavBar>
          <Navbar bg=\\"transparent\\" variant=\\"light\\" expand={true} collapseOnSelect={false}>
            <nav className=\\"navbar navbar-expand navbar-light bg-transparent\\">
              <withRouter(LinkContainer) to=\\"/\\">
                <LinkContainer to=\\"/\\" history={{...}} location={{...}} match={{...}} staticContext={[undefined]} replace={false} exact={false} strict={false} activeClassName=\\"active\\">
                  <Route path=\\"/\\" exact={false} strict={false}>
                    <NavbarBrand className=\\"active\\" style={{...}} href=\\"/\\" onClick={[Function (anonymous)]}>
                      <a style={{...}} href=\\"/\\" onClick={[Function (anonymous)]} className=\\"active navbar-brand\\">
                        <img alt=\\"\\" src=\\"/logo192.png\\" className=\\"nav-bar-logo d-inline-block align-top\\" />
                         
                        Nouvique
                      </a>
                    </NavbarBrand>
                  </Route>
                </LinkContainer>
              </withRouter(LinkContainer)>
              <NavbarCollapse className=\\"justify-content-end\\">
                <ForwardRef in={false} className=\\"justify-content-end\\" timeout={300} mountOnEnter={false} unmountOnExit={false} appear={false} getDimensionValue={[Function: getDefaultDimensionValue]}>
                  <ForwardRef addEndListener={[Function: transitionEndListener]} in={false} timeout={300} mountOnEnter={false} unmountOnExit={false} appear={false} aria-expanded={{...}} onEnter={[Function (anonymous)]} onEntering={[Function (anonymous)]} onEntered={[Function (anonymous)]} onExit={[Function (anonymous)]} onExiting={[Function (anonymous)]} childRef={{...}}>
                    <Transition in={false} timeout={300} mountOnEnter={false} unmountOnExit={false} appear={false} aria-expanded={{...}} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExited={[Function (anonymous)]} onExiting={[Function (anonymous)]} addEndListener={[Function (anonymous)]} nodeRef={{...}} enter={true} exit={true}>
                      <div className=\\"justify-content-end navbar-collapse collapse\\" aria-expanded={{...}}>
                        <Nav className=\\"mr-auto\\" justify={false} fill={false}>
                          <ForwardRef as=\\"div\\" activeKey={[undefined]} className=\\"mr-auto navbar-nav\\" onSelect={[Function (anonymous)]}>
                            <div className=\\"mr-auto navbar-nav\\" onKeyDown={[Function: handleKeyDown]} role={[undefined]}>
                              <NavItem>
                                <div className=\\"nav-item\\">
                                  <NavLink className=\\"nav-link nav-right-side\\" isActive={[Function: isActive]} activeClassName=\\"nav-link active nav-right-side\\" to={{...}}>
                                    <Link aria-current=\\"page\\" className=\\"nav-link nav-right-side nav-link active nav-right-side\\" style={{...}} to={{...}}>
                                      <LinkAnchor aria-current=\\"page\\" className=\\"nav-link nav-right-side nav-link active nav-right-side\\" style={{...}} href=\\"/\\" navigate={[Function: navigate]}>
                                        <a aria-current=\\"page\\" className=\\"nav-link nav-right-side nav-link active nav-right-side\\" style={{...}} href=\\"/\\" onClick={[Function: onClick]}>
                                          Home
                                        </a>
                                      </LinkAnchor>
                                    </Link>
                                  </NavLink>
                                </div>
                              </NavItem>
                              <NavItem>
                                <div className=\\"nav-item\\">
                                  <NavLink className=\\"nav-link nav-right-side\\" activeClassName=\\"nav-link active nav-right-side\\" to={{...}}>
                                    <Link aria-current={{...}} className=\\"nav-link nav-right-side\\" style={[undefined]} to={{...}}>
                                      <LinkAnchor aria-current={{...}} className=\\"nav-link nav-right-side\\" style={[undefined]} href=\\"/media\\" navigate={[Function: navigate]}>
                                        <a aria-current={{...}} className=\\"nav-link nav-right-side\\" style={[undefined]} href=\\"/media\\" onClick={[Function: onClick]}>
                                          Media
                                        </a>
                                      </LinkAnchor>
                                    </Link>
                                  </NavLink>
                                </div>
                              </NavItem>
                              <NavItem>
                                <div className=\\"nav-item\\">
                                  <NavLink className=\\"nav-link nav-right-side\\" isActive={[Function: isActive]} activeClassName=\\"nav-link active nav-right-side\\" to={{...}}>
                                    <Link aria-current={{...}} className=\\"nav-link nav-right-side\\" style={[undefined]} to={{...}}>
                                      <LinkAnchor aria-current={{...}} className=\\"nav-link nav-right-side\\" style={[undefined]} href=\\"/login\\" navigate={[Function: navigate]}>
                                        <a aria-current={{...}} className=\\"nav-link nav-right-side\\" style={[undefined]} href=\\"/login\\" onClick={[Function: onClick]}>
                                          Profile
                                        </a>
                                      </LinkAnchor>
                                    </Link>
                                  </NavLink>
                                </div>
                              </NavItem>
                              <NavItem>
                                <div className=\\"nav-item\\">
                                  <NavLink className=\\"nav-link nav-right-end\\" activeClassName=\\"nav-link active\\" to={{...}}>
                                    <Link aria-current={{...}} className=\\"nav-link nav-right-end\\" style={[undefined]} to={{...}}>
                                      <LinkAnchor aria-current={{...}} className=\\"nav-link nav-right-end\\" style={[undefined]} href=\\"/login\\" navigate={[Function: navigate]}>
                                        <a aria-current={{...}} className=\\"nav-link nav-right-end\\" style={[undefined]} href=\\"/login\\" onClick={[Function: onClick]}>
                                          Login/Signup
                                        </a>
                                      </LinkAnchor>
                                    </Link>
                                  </NavLink>
                                </div>
                              </NavItem>
                            </div>
                          </ForwardRef>
                        </Nav>
                      </div>
                    </Transition>
                  </ForwardRef>
                </ForwardRef>
              </NavbarCollapse>
            </nav>
          </Navbar>
        </NavBar>
        <div className=\\"mainbody\\">
          <AlertBar history={{...}} location={{...}} match={{...}} updateAlertBar={[Function: updateAlertBar]} emptyBasket={[Function: emptyBasket]} addToBasket={[Function: addToBasket]} removeFromBasket={[Function: removeFromBasket]} getBasketItems={[Function: getBasketItems]} getTotalBasketPrice={[Function: getTotalBasketPrice]} checkBasketAvailabilities={[Function: checkBasketAvailabilities]} stripePromise={{...}} alert={{...}}>
            <Alert show={true} variant={[undefined]} onClose={[Function (anonymous)]} dismissible={true} transition={{...}} closeLabel=\\"Close alert\\">
              <Fade unmountOnExit={true} in={true} timeout={300} mountOnEnter={false} appear={false}>
                <ForwardRef addEndListener={[Function: transitionEndListener]} unmountOnExit={true} in={true} timeout={300} mountOnEnter={false} appear={false} onEnter={[Function (anonymous)]} childRef={{...}}>
                  <Transition unmountOnExit={true} in={true} timeout={300} mountOnEnter={false} appear={false} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExited={[Function (anonymous)]} onExiting={[Function (anonymous)]} addEndListener={[Function (anonymous)]} nodeRef={{...}} enter={true} exit={true}>
                    <div role=\\"alert\\" className=\\"fade alert alert-dismissible show\\">
                      <CloseButton onClick={[Function (anonymous)]} aria-label=\\"Close alert\\" variant={[undefined]}>
                        <button type=\\"button\\" className=\\"btn-close\\" onClick={[Function (anonymous)]} aria-label=\\"Close alert\\" />
                      </CloseButton>
                    </div>
                  </Transition>
                </ForwardRef>
              </Fade>
            </Alert>
          </AlertBar>
          <Row>
            <div className=\\"row\\">
              <Col>
                <div className=\\"col\\">
                  <h1>
                     
                    &#39;s Profile
                  </h1>
                </div>
              </Col>
              <Col>
                <div className=\\"col\\">
                  <ButtonGroup style={{...}} vertical={false} role=\\"group\\">
                    <div style={{...}} role=\\"group\\" className=\\"btn-group\\" />
                  </ButtonGroup>
                </div>
              </Col>
            </div>
          </Row>
          <Row>
            <div className=\\"row\\">
              <div>
                @
                foo
              </div>
            </div>
          </Row>
          <Row>
            <div className=\\"row\\">
              <div />
            </div>
          </Row>
          <Row>
            <div className=\\"row\\">
              <div />
            </div>
          </Row>
          <Row>
            <div className=\\"row\\">
              <span style={{...}}>
                <div>
                  ,
                </div>
                 
                <div />
              </span>
            </div>
          </Row>
        </div>
        <footer className=\\"footer mt-auto py-3 bg-transparent text-black\\">
          <Container fluid={false}>
            <div className=\\"container\\">
              <Row>
                <div className=\\"row\\">
                  <Col>
                    <div className=\\"col\\">
                      Nouvique 2021 v
                      0.21.0
                    </div>
                  </Col>
                  <Col>
                    <div className=\\"col\\">
                      <div style={{...}}>
                        <Link to=\\"/support\\">
                          <LinkAnchor href=\\"/support\\" navigate={[Function: navigate]}>
                            <a href=\\"/support\\" onClick={[Function: onClick]}>
                              Support
                            </a>
                          </LinkAnchor>
                        </Link>
                      </div>
                    </div>
                  </Col>
                </div>
              </Row>
            </div>
          </Container>
        </footer>
      </BasePage>
    </ProfileView>
  </Router>
</MemoryRouter>"
`;

exports[`ProfileView Should render correctly with shallow 1`] = `
"<Fragment>
  <Offcanvas show={false} onHide={[Function (anonymous)]} placement=\\"end\\" scroll={true} backdrop={false} keyboard={true} autoFocus={true} enforceFocus={true} restoreFocus={true}>
    <OffcanvasHeader closeButton={true} closeLabel=\\"Close\\">
      <OffcanvasTitle>
        Orders
      </OffcanvasTitle>
    </OffcanvasHeader>
    <OffcanvasBody />
  </Offcanvas>
  <BasePage history={{...}} location={{...}} match={{...}} updateAlertBar={[Function: updateAlertBar]} emptyBasket={[Function: emptyBasket]} addToBasket={[Function: addToBasket]} removeFromBasket={[Function: removeFromBasket]} getBasketItems={[Function: getBasketItems]} getTotalBasketPrice={[Function: getTotalBasketPrice]} checkBasketAvailabilities={[Function: checkBasketAvailabilities]} stripePromise={{...}} alert={{...}}>
    <Row>
      <Col>
        <h1>
           
          &#39;s Profile
        </h1>
      </Col>
      <Col>
        <ButtonGroup style={{...}} vertical={false} role=\\"group\\" />
      </Col>
    </Row>
    <Row>
      <div>
        @
        foo
      </div>
    </Row>
    <Row>
      <div />
    </Row>
    <Row>
      <div />
    </Row>
    <Row>
      <span style={{...}}>
        <div>
          ,
        </div>
         
        <div />
      </span>
    </Row>
  </BasePage>
</Fragment>"
`;
